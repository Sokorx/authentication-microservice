
name: PUSH Staging Workflow

on:
  push:
    branches:
      - staging

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_STAGING_PASSWORD }}
          MYSQL_DATABASE: authmicroservice
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate Key
        run: php artisan key:generate
      - name: Run migrations and Execute tests
        env:
          DB_CONNECTION: mysql
          DB_PORT: 3307
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_STAGING_PASSWORD }}
          DB_DATABASE: authmicroservice
        run: |
          php artisan migrate --seeder
          php artisan test
      - name: Generate Documentation
        run: php artisan scribe:generate
  deploy-staging:
    name: Deploy Project to STAGING Server
    runs-on: ubuntu-latest
    needs: [app-tests]
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extension-csv: mbstring, bcmath
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      # - name: Setup Deployer
      #   uses: atymic/deployer-php-action@master
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      # - name: Deploy to Staging
      #   env:
      #     DOT_ENV: ${{ secrets.DOT_ENV_STAGING }}
      #   run: dep deploy env=staging --tag=${{ env.GITHUB_REF }} -vvv
      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        env:
            DOT_ENV: ${{ secrets.DOT_ENV_STAGING }}
            SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: DOT_ENV
          script: |
            sudo mkdir -p /tmp/staging
            cd /tmp/staging && sudo git clone git@github.com:Sokorx/authentication-microservice.git
            cd /tmp/staging/authentication-microservice && sudo git checkout staging
            sudo chown -R $SSH_USERNAME:$SSH_USERNAME /tmp/staging/authentication-microservice
            sudo chmod -R 774 /tmp/staging/authentication-microservice
            sudo cp $DOT_ENV .env
            composer install
            sudo php artisan migrate --seeder && sudo php artisan test
            sudo rm -r /tests/www/moniport/api-old && sudo mv /tests/www/moniport/api /tests/www/moniport/api-old
            sudo mkdir -p /tests/www/moniport/api && sudo mv /tmp/staging/authentication-microservice /tests/www/moniport/api
            sudo rm -r /tmp/staging/authentication-microservice

